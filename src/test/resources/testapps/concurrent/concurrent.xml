<?xml version="1.0" encoding="UTF-8"?>
<!-- 
#%L
  Mule PLC Connector Test Utilities
  %%
  Copyright (C) 2021 - 2022 (teslanet.nl) Rogier Cobben
  
  Contributors:
      (teslanet.nl) Rogier Cobben - initial creation
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
-->
<mule xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:plc="http://www.teslanet.nl/schema/mule/plc"
	xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.teslanet.nl/schema/mule/plc http://www.teslanet.nl/schema/mule/plc/current/mule-plc.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">


	<plc:event-handler name="Event_handler" />

	<flow name="concurrent-ping">
		<foreach collection="#[[ 1, 2, 3, 4 ]]" doc:name="Four times">
			<async doc:name="Async">
				<flow-ref doc:name="ping"
					doc:id="efa4e4d2-9baa-4f59-9dd1-ff49d046b1dc"
					name="concurrent-ping-single" />
				<logger level="INFO" doc:name="Logger" message="STORE ping" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "ping-spy" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
				<logger level="INFO" doc:name="Logger" message="STORED ping" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
			</async>
		</foreach>
	</flow>
	
	<flow name="concurrent-ping-single">
		<plc:ping doc:name="Ping" config-ref="PLC_Config_Concurrent" >
		    <reconnect count="5" frequency="500" />
		</plc:ping>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On unsupported Error Continue" type="PLC:UNSUPPORTED">
				<set-payload value="UNSUPPORTED ERROR" doc:name="UNSUPPORTED ERROR" />
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On any Error Continue" type="PLC:CONNECTIVITY, PLC:RETRY_EXHAUSTED, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
				<set-payload value="ANY ERROR" doc:name="ANY ERROR" />
			</on-error-continue>
		</error-handler>
	</flow>
	
	<flow name="concurrent-read">
		<foreach collection="#[[ 1, 2, 3, 4 ]]" doc:name="Four times">
			<async doc:name="Async">
				<flow-ref doc:name="read"
					doc:id="4c0396ef-81e9-4469-94dd-4dda91552fda"
					name="concurrent-read-single" />
				<logger level="INFO" doc:name="Logger" message="STORE read" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "read-spy" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
				<logger level="INFO" doc:name="Logger" message="STORED read" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
			</async>
		</foreach>
	</flow>
	
	<flow name="concurrent-read-single" doc:id="a2270657-93e9-4559-8ca2-ff5c01374026">
		<plc:read doc:name="Read" config-ref="PLC_Config_Concurrent" throwExceptionOnIoError="false">
		            <reconnect count="5" frequency="500" />
					<plc:read-fields>
						<plc:read-field alias="one" address="STATE/address_one:BOOL" />
						<plc:read-field alias="two" address="STATE/address_two:BOOL" />
					</plc:read-fields>
				</plc:read>
	</flow>
 
 	<flow name="concurrent-write">
		<foreach collection="#[[ 1, 2, 3, 4 ]]" doc:name="Four times">
			<async doc:name="Async" >
				<flow-ref doc:name="concurrent-write-single" doc:id="918cf040-2745-4f5f-baff-baac2f13a69f" name="concurrent-write-single"/>
				<logger level="INFO" doc:name="Logger" message="STORE write" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "write-spy" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
				<logger level="INFO" doc:name="Logger" message="STORED write" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
			</async>
		</foreach>
    </flow>

	<flow name="concurrent-write-single">
		<plc:write doc:name="Write" config-ref="PLC_Config_Concurrent" throwExceptionOnIoError="false">
		    <reconnect count="5" frequency="500" />
		    <plc:write-fields>
		    	<plc:write-field alias="one" address="STATE/address_one:BOOL" values="#[[ true ]]" />
		        <plc:write-field alias="two" address="STATE/address_two:BOOL" values="#[[ false ]]" />
		    </plc:write-fields>
		</plc:write>
    </flow>

	<flow name="concurrent-subscribe">
		<foreach collection="#[[ 1, 2, 3, 4 ]]" doc:name="Four times">
			<async doc:name="Async" >
				<flow-ref doc:name="concurrent-subscribe-single" doc:id="23040e95-6188-4b19-be53-328d44eb64d9" name="concurrent-subscribe-single"/>
				<logger level="INFO" doc:name="Logger" message="STORE" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "subscribe-spy" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
				<logger level="INFO" doc:name="Logger" message="#['STORED subscribe ' ++ (vars.counter as String)]" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload as String]" category="nl.teslanet.mule.connectors.plc.test" />
			</async>
		</foreach>
    </flow>
    
	<flow name="concurrent-subscribe-single">
		<plc:subscribe doc:name="Subscribe" config-ref="PLC_Config_Concurrent" eventHandler="Event_handler" throwExceptionOnIoError="false">
			<plc:subscribe-fields >
				<plc:subscribe-field alias="one" address="STATE/address_one:BOOL" />
		        <plc:subscribe-field alias="two" address="STATE/address_two:BOOL" />
		    </plc:subscribe-fields>
		</plc:subscribe>
    </flow>
    
    <flow name="concurrent-event-listener" doc:id="27c41814-6df2-4784-afd9-160a373c8e2b" >
        <plc:event-listener doc:name="Event listener" eventHandler="Event_handler"/>
        <logger level="INFO" doc:name="Logger" message="#['EVENT']" category="nl.teslanet.mule.connectors.plc.test"/>
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "event-spy" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
    </flow>

	<flow name="concurrent-unsubscribe">
		<foreach collection="#[[ 1, 2, 3, 4 ]]" doc:name="Four times">
			<async doc:name="Async" >
				<flow-ref doc:name="concurrent-unsubscribe-single" doc:id="782b3ad2-d8ce-49ef-89e5-2a80b4fc0a30" name="concurrent-unsubscribe-single"/>
				<logger level="INFO" doc:name="Logger" message="STORE" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test" />
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "unsubscribe-spy" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
				<logger level="INFO" doc:name="Logger" message="STORED" category="nl.teslanet.mule.connectors.plc.test" />
				<logger level="INFO" doc:name="Logger" message="#[payload as String]" category="nl.teslanet.mule.connectors.plc.test" />
			</async>
		</foreach>
    </flow>

	<flow name="concurrent-unsubscribe-single">
		<plc:unsubscribe doc:name="UnSubscribe" config-ref="PLC_Config_Concurrent" throwExceptionOnIoError="false">
			<plc:unsubscribe-fields >
				<plc:unsubscribe-field alias="one" />
		        <plc:unsubscribe-field alias="two" />
		    </plc:unsubscribe-fields>
        </plc:unsubscribe>
    </flow>

</mule>

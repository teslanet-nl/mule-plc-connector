<?xml version="1.0" encoding="UTF-8"?>
<!-- 
#%L
  Mule PLC Connector Test Utilities
  %%
  Copyright (C) 2021 - 2022 (teslanet.nl) Rogier Cobben
  
  Contributors:
      (teslanet.nl) Rogier Cobben - initial creation
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
-->
<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:plc="http://www.teslanet.nl/schema/mule/plc"
    xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.teslanet.nl/schema/mule/plc http://www.teslanet.nl/schema/mule/plc/current/mule-plc.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">

	<plc:config name="PLC_Config">
		<plc:connection connectionString="simulated:plc" />
	</plc:config>
	
    <plc:event-handler name="Event_handler1"/>
    <plc:event-handler name="Event_handler2"/>

    <flow name="subscribe-subscribe" doc:id="e977a19f-6693-4d08-8c08-1748921cac79" >
        <plc:subscribe doc:name="Subscribe" config-ref="PLC_Config" eventHandler="Event_handler1">
            <plc:subscribe-fields >
                <plc:subscribe-field alias="coil1" address="STATE/coil1:BOOL[2]" />
                <plc:subscribe-field alias="reg1" address="STATE/register1:INT[2]" />
            </plc:subscribe-fields>
        </plc:subscribe>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>
    
    <flow name="subscribe-subscribe-2a" doc:id="95e15839-2b27-4d0d-b324-dca64ec21183" >
        <plc:subscribe doc:name="Subscribe" config-ref="PLC_Config" eventHandler="Event_handler1">
            <plc:subscribe-fields >
                <plc:subscribe-field alias="coil1" address="STATE/coil1:BOOL[2]" />
            </plc:subscribe-fields>
        </plc:subscribe>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>
    
    <flow name="subscribe-subscribe-2b" doc:id="12235d8c-07d7-4875-9463-7f4a071a7aa2" >
        <plc:subscribe doc:name="Subscribe" config-ref="PLC_Config" eventHandler="Event_handler2">
            <plc:subscribe-fields >
                <plc:subscribe-field alias="reg1" address="STATE/register1:INT[2]" />
            </plc:subscribe-fields>
        </plc:subscribe>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>
    
    <flow name="subscribe-unsubscribe" doc:id="5d286c01-3c4b-4ab2-aae6-a160f880871a" >
        <plc:unsubscribe doc:name="Unsubscribe" config-ref="PLC_Config">
            <plc:unsubscribe-fields >
                <plc:unsubscribe-field alias="coil1" />
                <plc:unsubscribe-field alias="reg1" />
            </plc:unsubscribe-fields>
        </plc:unsubscribe>
         <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>
    
    <flow name="subscribe-unsubscribe-partial" doc:id="f3ba5350-2e42-4714-a762-bc75998c378c" >
        <plc:unsubscribe doc:name="Unsubscribe" config-ref="PLC_Config">
            <plc:unsubscribe-fields >
                <plc:unsubscribe-field alias="coil1" />
            </plc:unsubscribe-fields>
        </plc:unsubscribe>
         <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>
    
    <flow name="subscribe-eventhandler1a" doc:id="9a650d61-0921-4b29-9390-2bdc0c6fb2ed" >
        <plc:event-listener doc:name="Event listener" eventHandler="Event_handler1"/>
        <logger level="INFO" doc:name="Logger" message="#['EVENT1a']" category="nl.teslanet.mule.connectors.plc.test"/>
        <logger level="INFO" doc:name="Logger" message="#[message]" category="nl.teslanet.mule.connectors.plc.test"/>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "handler1a" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
    </flow>
    <flow name="subscribe-eventhandler1b" doc:id="cf9c5e54-e7ec-48d6-9d1d-91cfa1bee3da" >
        <plc:event-listener doc:name="Event listener" eventHandler="Event_handler1"/>
        <logger level="INFO" doc:name="Logger" message="#['EVENT1b']" category="nl.teslanet.mule.connectors.plc.test"/>
        <logger level="INFO" doc:name="Logger" message="#[message]" category="nl.teslanet.mule.connectors.plc.test"/>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "handler1b" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
    </flow>
    
    <flow name="subscribe-eventhandler2" doc:id="37d5696b-1b3c-459c-a28b-4e41a3f0d359" >
        <plc:event-listener doc:name="Event listener" eventHandler="Event_handler2"/>
        <logger level="INFO" doc:name="Logger" message="#['EVENT2']" category="nl.teslanet.mule.connectors.plc.test"/>
        <logger level="INFO" doc:name="Logger" message="#[message]" category="nl.teslanet.mule.connectors.plc.test"/>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
        <java:new doc:name="New spy"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "handler2" }]]]></java:args>
        </java:new>
        <java:invoke doc:name="Invoke" instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.plc.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
    </flow>
    
    <flow name="subscribe-write-1">
        <plc:write doc:name="Write" config-ref="PLC_Config">
            <reconnect count="5" frequency="500" />
            <plc:write-fields>
                <plc:write-field alias="coil1"
                    address="STATE/coil1:BOOL[2]" values="#[ [ true, false ] ]" />
            </plc:write-fields>
        </plc:write>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>

    <flow name="subscribe-write-2">
        <plc:write doc:name="Write" config-ref="PLC_Config">
            <reconnect count="5" frequency="500" />
            <plc:write-fields>
                <plc:write-field alias="reg1"
                    address="STATE/register1:INT[2]" values="#[[ '111', '222' ]]" />
            </plc:write-fields>
        </plc:write>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>

    <flow name="subscribe-write-3">
        <plc:write doc:name="Write" config-ref="PLC_Config">
            <reconnect count="5" frequency="500" />
            <plc:write-fields>
                <plc:write-field alias="coil1"
                    address="STATE/coil1:BOOL[2]" values="#[ [ false, true ] ]" />
            </plc:write-fields>
        </plc:write>
        <set-payload value="#[ output application/java --- write( payload, 'application/xml' ) ]"
            doc:name="Set Payload" />
        <logger level="INFO" doc:name="Logger" message="#[payload]" category="nl.teslanet.mule.connectors.plc.test"/>
    </flow>


</mule>
